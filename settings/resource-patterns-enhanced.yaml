# Resource Pattern Recognition Configuration

resource_identification:
  # AWS Resource ID patterns - These are correct and match AWS formats
  id_patterns:
    # AWS resource IDs with specific prefixes
    vpc: ['^vpc-[a-zA-Z0-9]{8,17}$']
    subnet: ['^subnet-[a-zA-Z0-9]{8,17}$']
    security_group: ['^sg-[a-zA-Z0-9]{8,17}$']
    ec2_instance: ['^i-[a-zA-Z0-9]{8,17}$']
    internet_gateway: ['^igw-[a-zA-Z0-9]{8,17}$']
    nat_gateway: ['^nat-[a-zA-Z0-9]{8,17}$']
    route_table: ['^rtb-[a-zA-Z0-9]{8,17}$']
    launch_template: ['^lt-[a-zA-Z0-9]{8,17}$']
    key_pair: ['^key-[a-zA-Z0-9]{8,17}$']
    ami: ['^ami-[a-zA-Z0-9]{8,17}$']
    
    # Load balancer ARN patterns
    load_balancer: [
      '^arn:aws:elasticloadbalancing:.*:loadbalancer/app/.*',
      '^arn:aws:elasticloadbalancing:.*:loadbalancer/net/.*',
      '^arn:aws:elasticloadbalancing:.*:loadbalancer/gw/.*'
    ]
    target_group: ['^arn:aws:elasticloadbalancing:.*:targetgroup/.*']
    
    # Auto Scaling Group ARN patterns
    auto_scaling_group: ['^arn:aws:autoscaling:.*:autoScalingGroup:.*']
    
    # Other resources use description patterns because ID patterns can't reliably identify these

  # Description-based patterns for AI inference
  description_patterns:
    vpc:
      - 'virtual private cloud'
      - 'network isolation'
      - 'vpc'
      
    subnet:
      - 'subnet'
      - 'public subnet'
      - 'private subnet'
      - 'database subnet'
      
    subnets:
      - 'subnets'
      - 'multiple subnets'
      - 'subnet list'
      - 'subnet array'
      
    security_group:
      - 'security group'
      - 'firewall rules'
      - 'network security'
      - 'access control'
      
    ec2_instance:
      - 'ec2 instance'
      - 'virtual machine'
      - 'compute instance'
      - 'server'

    listener:
      - 'listener'

    load_balancer:
      - 'load balancer'
      - 'application load balancer'
      - 'network load balancer'
      - 'alb'
      - 'nlb'
      
    target_group:
      - 'target group'
      - 'alb target group'
      - 'load balancer target'
      
    auto_scaling_group:
      - 'auto scaling'
      - 'autoscaling'
      - 'scaling group'
      - 'asg'
      
    launch_template:
      - 'launch template'
      - 'ec2 launch template'
      - 'instance template'
      
    internet_gateway:
      - 'internet gateway'
      - 'igw'
      
    nat_gateway:
      - 'nat gateway'
      - 'network address translation'
      
    route_table:
      - 'route table'
      - 'routing table'
      
    key_pair:
      - 'key pair'
      - 'ssh key'
      - 'ec2 key'
      
    ami:
      - 'ami'
      - 'amazon machine image'
      - 'image'
      - 'machine image'
      
    availability_zone:
      - 'availability zone'
      - 'az'
      - 'zone'
      
    rds_instance:
      - 'rds'
      - 'database'
      - 'relational database'
      
    db_subnet_group:
      - 'db subnet group'
      - 'database subnet group'

# Tool-to-resource type mapping (REQUIRED - used by PatternMatcher)
# Maps exact tool names to resource types for proper ID extraction
# These are verified against pkg/tools/factory.go
tool_resource_patterns:
  vpc:
    - '^create-vpc$'
    - '^list-vpcs$'
    - '^get-default-vpc$'
    
  subnet:
    - '^create-subnet$'
    - '^create-private-subnet$'
    - '^create-public-subnet$'
    - '^list-subnets$'
    
  subnets:
    - '^list-subnets-for-alb$'
    
  security_group:
    - '^create-security-group$'
    - '^list-security-groups$'
    - '^add-security-group-ingress-rule$'
    - '^add-security-group-egress-rule$'
    - '^delete-security-group$'
    
  ec2_instance:
    - '^create-ec2-instance$'
    - '^list-ec2-instances$'
    - '^start-ec2-instance$'
    - '^stop-ec2-instance$'
    - '^terminate-ec2-instance$'
    
  load_balancer:
    - '^create-load-balancer$'
    - '^list-load-balancers$'
    
  target_group:
    - '^create-target-group$'
    - '^list-target-groups$'
    - '^register-targets$'
    - '^deregister-targets$'
    
  listener:
    - '^create-listener$'
    
  auto_scaling_group:
    - '^create-auto-scaling-group$'
    - '^list-auto-scaling-groups$'
    
  launch_template:
    - '^create-launch-template$'
    - '^list-launch-templates$'
    
  internet_gateway:
    - '^create-internet-gateway$'
    
  nat_gateway:
    - '^create-nat-gateway$'
    - '^describe-nat-gateways$'
    
  route_table:
    - '^create-public-route-table$'
    - '^create-private-route-table$'
    - '^associate-route-table$'
    - '^add-route$'
    
  key_pair:
    - '^create-key-pair$'
    - '^list-key-pairs$'
    - '^get-key-pair$'
    - '^import-key-pair$'
    
  rds_instance:
    - '^create-db-instance$'
    - '^list-db-instances$'
    - '^start-db-instance$'
    - '^stop-db-instance$'
    - '^delete-db-instance$'
    
  db_subnet_group:
    - '^create-db-subnet-group$'
    
  ami:
    - '^get-latest-amazon-linux-ami$'
    - '^get-latest-ubuntu-ami$'
    - '^get-latest-windows-ami$'
    - '^list-amis$'
    - '^create-ami-from-instance$'
    
  availability_zone:
    - '^get-availability-zones$'

# Resource hierarchy and relationships
resource_relationships:
  # Parent -> Children mapping
  vpc:
    - subnet
    - subnets
    - security_group  
    - internet_gateway
    - route_table
    
  subnet:
    - ec2_instance
    - nat_gateway
    - rds_instance
    
  security_group:
    - ec2_instance
    - load_balancer
    - rds_instance
    
  load_balancer:
    - target_group
    - listener
    
  auto_scaling_group:
    - launch_template
    - target_group
    
  launch_template:
    - ec2_instance # virtual relationship
    
  # Dependencies (what this resource typically needs)
  dependencies:
    subnet: [vpc]
    subnets: [vpc]
    security_group: [vpc]
    ec2_instance: [subnet, security_group, ami, key_pair]
    load_balancer: [subnet, security_group]
    target_group: [vpc]
    auto_scaling_group: [launch_template, subnet]
    nat_gateway: [subnet]
    rds_instance: [db_subnet_group, security_group]
    db_subnet_group: [subnet]
    internet_gateway: [vpc]
    route_table: [vpc]
    listener: [load_balancer, target_group]

# Tool Category Mapping
tool_categories:
  networking:
    - vpc
    - subnet
    - subnets
    - internet_gateway
    - nat_gateway
    - route_table
    
  security:
    - security_group
    
  compute:
    - ec2_instance
    - ami
    - key_pair
    
  load_balancing:
    - load_balancer
    - target_group
    - listener
    
  auto_scaling:
    - auto_scaling_group
    - launch_template
    
  database:
    - rds_instance
    - db_subnet_group
    - db_snapshot
    
  discovery:
    - availability_zone
